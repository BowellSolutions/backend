version: "3.8"

services:
  backend:
    container_name: backend
    build: .
    volumes:
      - .:/app/
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.dev
    depends_on:
      - postgres_db
    links:
      - redis_db

  postgres_db:
    container_name: postgres_db
    image: postgres:14.0-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres_db
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}

  redis_db:
    container_name: redis_db
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile.Celery
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A core worker -l INFO"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.dev
    volumes:
      - .:/app/
    depends_on:
      - backend
      - redis_db
      - postgres_db

volumes:
  postgres-data:
  redis-data:
